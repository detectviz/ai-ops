version: '3.8'

services:
  sre-bot-web:
    build:
      context: .
      dockerfile: agents/sre_agent/Dockerfile-agent
    image: sre-bot:latest
    container_name: sre-bot
    restart: unless-stopped
    ports:
      - "8000:8000"  # Expose the web interface
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}  # Set from environment variable
      - PYTHONPATH=/app
      # set the kube context that is set on the parent shell session
      - KUBE_CONTEXT=${KUBE_CONTEXT}
      - KUBECONFIG=/root/.kube/config
      - AWS_PROFILE=${AWS_PROFILE}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=srebot
      - DB_USER=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ${HOME}/.kube:/root/.kube:ro
      - ${HOME}/.aws:/root/.aws:ro
      - ./agents:/app/  # Mount the entire project directory
    # session db url paramateer is necessary for web interface to write session data to the database
    command: ["adk", "web", "--session_db_url=postgresql://postgres:postgres@postgres:5432/srebot"]
    depends_on:
      - postgres

  sre-bot-api:  
    build:
      context: .
      dockerfile: agents/sre_agent/Dockerfile-agent
    image: sre-bot:latest
    container_name: sre-bot-api
    restart: unless-stopped
    ports:
      - "8001:8000"  # Expose the API
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - PYTHONPATH=/app
      - KUBECONFIG=/root/.kube/config
      - KUBE_CONTEXT=${KUBE_CONTEXT}
      - AWS_PROFILE=${AWS_PROFILE}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=srebot
      - DB_USER=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - LOG_LEVEL=DEBUG
    volumes:
      - ${HOME}/.kube:/root/.kube:ro
      - ${HOME}/.aws:/root/.aws:ro
      - ./agents:/app/
    command: ["adk", "api_server", "--session_db_url=postgresql://postgres:postgres@postgres:5432/srebot"]
    depends_on:
      - postgres

  slack-bot:
    build:
      context: ./slack_bot
      dockerfile: Dockerfile
    image: slack-bot:latest
    container_name: slack-bot
    restart: unless-stopped
    ports:
      - "8002:80"
    env_file:
      - slack_bot/.env
    volumes:
      - ./slack_bot:/app:delegated  # Mount local code for development
    environment:
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1  # Prevents Python from writing .pyc files
      - PYTHONUNBUFFERED=1  # Prevents Python from buffering stdout and stderr
    command: ["uvicorn", "main:fast_api", "--host", "0.0.0.0", "--port", "80", "--reload"]  # Enable auto-reload

  postgres:
    image: postgres:17
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=srebot
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
