/*
 * SRE Platform - Control Plane API
 *
 * The Control Plane is the central management hub for the SRE Platform. It provides the Web UI and APIs for managing resources, users, incidents, and more. It orchestrates diagnostic tasks by calling the SRE Assistant service. 
 *
 * API version: 1.0.0
 * Contact: sre-platform@example.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"CreateAlertRule",
		strings.ToUpper("Post"),
		"/api/v1/alert-rules",
		CreateAlertRule,
	},

	Route{
		"DeleteAlertRule",
		strings.ToUpper("Delete"),
		"/api/v1/alert-rules/{ruleId}",
		DeleteAlertRule,
	},

	Route{
		"DisableAlertRule",
		strings.ToUpper("Post"),
		"/api/v1/alert-rules/{ruleId}/disable",
		DisableAlertRule,
	},

	Route{
		"EnableAlertRule",
		strings.ToUpper("Post"),
		"/api/v1/alert-rules/{ruleId}/enable",
		EnableAlertRule,
	},

	Route{
		"GetAlertRule",
		strings.ToUpper("Get"),
		"/api/v1/alert-rules/{ruleId}",
		GetAlertRule,
	},

	Route{
		"ListAlertRules",
		strings.ToUpper("Get"),
		"/api/v1/alert-rules",
		ListAlertRules,
	},

	Route{
		"TestAlertRule",
		strings.ToUpper("Post"),
		"/api/v1/alert-rules/{ruleId}/test",
		TestAlertRule,
	},

	Route{
		"UpdateAlertRule",
		strings.ToUpper("Put"),
		"/api/v1/alert-rules/{ruleId}",
		UpdateAlertRule,
	},

	Route{
		"QueryAuditLogs",
		strings.ToUpper("Get"),
		"/api/v1/audit-logs",
		QueryAuditLogs,
	},

	Route{
		"CreateSchedule",
		strings.ToUpper("Post"),
		"/api/v1/automation/schedules",
		CreateSchedule,
	},

	Route{
		"CreateScript",
		strings.ToUpper("Post"),
		"/api/v1/automation/scripts",
		CreateScript,
	},

	Route{
		"DeleteScript",
		strings.ToUpper("Delete"),
		"/api/v1/automation/scripts/{scriptId}",
		DeleteScript,
	},

	Route{
		"ExecuteScript",
		strings.ToUpper("Post"),
		"/api/v1/automation/execute",
		ExecuteScript,
	},

	Route{
		"GetExecution",
		strings.ToUpper("Get"),
		"/api/v1/automation/executions/{executionId}",
		GetExecution,
	},

	Route{
		"GetScript",
		strings.ToUpper("Get"),
		"/api/v1/automation/scripts/{scriptId}",
		GetScript,
	},

	Route{
		"ListExecutions",
		strings.ToUpper("Get"),
		"/api/v1/automation/executions",
		ListExecutions,
	},

	Route{
		"ListScripts",
		strings.ToUpper("Get"),
		"/api/v1/automation/scripts",
		ListScripts,
	},

	Route{
		"UpdateScript",
		strings.ToUpper("Put"),
		"/api/v1/automation/scripts/{scriptId}",
		UpdateScript,
	},

	Route{
		"DiagnosisCallback",
		strings.ToUpper("Post"),
		"/api/v1/callbacks/diagnosis-complete",
		DiagnosisCallback,
	},

	Route{
		"CpCheckHealth",
		strings.ToUpper("Get"),
		"/api/v1/healthz",
		CpCheckHealth,
	},

	Route{
		"CpCheckReadiness",
		strings.ToUpper("Get"),
		"/api/v1/readyz",
		CpCheckReadiness,
	},

	Route{
		"CpGetMetrics",
		strings.ToUpper("Get"),
		"/api/v1/metrics",
		CpGetMetrics,
	},

	Route{
		"GetDashboardSummary",
		strings.ToUpper("Get"),
		"/api/v1/dashboard/summary",
		GetDashboardSummary,
	},

	Route{
		"GetDashboardTrends",
		strings.ToUpper("Get"),
		"/api/v1/dashboard/trends",
		GetDashboardTrends,
	},

	Route{
		"GetResourceDistribution",
		strings.ToUpper("Get"),
		"/api/v1/dashboard/resource-distribution",
		GetResourceDistribution,
	},

	Route{
		"AcknowledgeIncident",
		strings.ToUpper("Post"),
		"/api/v1/incidents/{incidentId}/acknowledge",
		AcknowledgeIncident,
	},

	Route{
		"AddIncidentComment",
		strings.ToUpper("Post"),
		"/api/v1/incidents/{incidentId}/comments",
		AddIncidentComment,
	},

	Route{
		"AssignIncident",
		strings.ToUpper("Post"),
		"/api/v1/incidents/{incidentId}/assign",
		AssignIncident,
	},

	Route{
		"CreateIncident",
		strings.ToUpper("Post"),
		"/api/v1/incidents",
		CreateIncident,
	},

	Route{
		"GenerateIncidentReport",
		strings.ToUpper("Post"),
		"/api/v1/incidents/generate-report",
		GenerateIncidentReport,
	},

	Route{
		"GetIncident",
		strings.ToUpper("Get"),
		"/api/v1/incidents/{incidentId}",
		GetIncident,
	},

	Route{
		"ListAlerts",
		strings.ToUpper("Get"),
		"/api/v1/alerts",
		ListAlerts,
	},

	Route{
		"ListIncidents",
		strings.ToUpper("Get"),
		"/api/v1/incidents",
		ListIncidents,
	},

	Route{
		"ResolveIncident",
		strings.ToUpper("Post"),
		"/api/v1/incidents/{incidentId}/resolve",
		ResolveIncident,
	},

	Route{
		"UpdateIncident",
		strings.ToUpper("Put"),
		"/api/v1/incidents/{incidentId}",
		UpdateIncident,
	},

	Route{
		"CreateNotificationChannel",
		strings.ToUpper("Post"),
		"/api/v1/notification-channels",
		CreateNotificationChannel,
	},

	Route{
		"DeleteNotificationChannel",
		strings.ToUpper("Delete"),
		"/api/v1/notification-channels/{channelId}",
		DeleteNotificationChannel,
	},

	Route{
		"GetNotificationChannel",
		strings.ToUpper("Get"),
		"/api/v1/notification-channels/{channelId}",
		GetNotificationChannel,
	},

	Route{
		"ListNotificationChannels",
		strings.ToUpper("Get"),
		"/api/v1/notification-channels",
		ListNotificationChannels,
	},

	Route{
		"TestNotificationChannel",
		strings.ToUpper("Post"),
		"/api/v1/notification-channels/{channelId}/test",
		TestNotificationChannel,
	},

	Route{
		"UpdateNotificationChannel",
		strings.ToUpper("Put"),
		"/api/v1/notification-channels/{channelId}",
		UpdateNotificationChannel,
	},

	Route{
		"CreateResourceGroup",
		strings.ToUpper("Post"),
		"/api/v1/resource-groups",
		CreateResourceGroup,
	},

	Route{
		"DeleteResourceGroup",
		strings.ToUpper("Delete"),
		"/api/v1/resource-groups/{groupId}",
		DeleteResourceGroup,
	},

	Route{
		"ListResourceGroups",
		strings.ToUpper("Get"),
		"/api/v1/resource-groups",
		ListResourceGroups,
	},

	Route{
		"ManageGroupMembers",
		strings.ToUpper("Post"),
		"/api/v1/resource-groups/{groupId}/members",
		ManageGroupMembers,
	},

	Route{
		"UpdateResourceGroup",
		strings.ToUpper("Put"),
		"/api/v1/resource-groups/{groupId}",
		UpdateResourceGroup,
	},

	Route{
		"BatchOperateResources",
		strings.ToUpper("Post"),
		"/api/v1/resources/batch",
		BatchOperateResources,
	},

	Route{
		"CreateResource",
		strings.ToUpper("Post"),
		"/api/v1/resources",
		CreateResource,
	},

	Route{
		"DeleteResource",
		strings.ToUpper("Delete"),
		"/api/v1/resources/{resourceId}",
		DeleteResource,
	},

	Route{
		"GetResource",
		strings.ToUpper("Get"),
		"/api/v1/resources/{resourceId}",
		GetResource,
	},

	Route{
		"GetScanResult",
		strings.ToUpper("Get"),
		"/api/v1/resources/scan/{taskId}",
		GetScanResult,
	},

	Route{
		"ListResources",
		strings.ToUpper("Get"),
		"/api/v1/resources",
		ListResources,
	},

	Route{
		"ScanNetwork",
		strings.ToUpper("Post"),
		"/api/v1/resources/scan",
		ScanNetwork,
	},

	Route{
		"UpdateResource",
		strings.ToUpper("Put"),
		"/api/v1/resources/{resourceId}",
		UpdateResource,
	},

	Route{
		"CreateMaintenanceWindow",
		strings.ToUpper("Post"),
		"/api/v1/settings/maintenance-windows",
		CreateMaintenanceWindow,
	},

	Route{
		"GetSettings",
		strings.ToUpper("Get"),
		"/api/v1/settings",
		GetSettings,
	},

	Route{
		"ListMaintenanceWindows",
		strings.ToUpper("Get"),
		"/api/v1/settings/maintenance-windows",
		ListMaintenanceWindows,
	},

	Route{
		"UpdateSettings",
		strings.ToUpper("Put"),
		"/api/v1/settings",
		UpdateSettings,
	},

	Route{
		"CreateTeam",
		strings.ToUpper("Post"),
		"/api/v1/teams",
		CreateTeam,
	},

	Route{
		"DeleteTeam",
		strings.ToUpper("Delete"),
		"/api/v1/teams/{teamId}",
		DeleteTeam,
	},

	Route{
		"GetTeam",
		strings.ToUpper("Get"),
		"/api/v1/teams/{teamId}",
		GetTeam,
	},

	Route{
		"ListTeams",
		strings.ToUpper("Get"),
		"/api/v1/teams",
		ListTeams,
	},

	Route{
		"ManageTeamMembers",
		strings.ToUpper("Post"),
		"/api/v1/teams/{teamId}/members",
		ManageTeamMembers,
	},

	Route{
		"UpdateTeam",
		strings.ToUpper("Put"),
		"/api/v1/teams/{teamId}",
		UpdateTeam,
	},

	Route{
		"ChangePassword",
		strings.ToUpper("Post"),
		"/api/v1/users/profile/change-password",
		ChangePassword,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/api/v1/users",
		CreateUser,
	},

	Route{
		"DeleteUser",
		strings.ToUpper("Delete"),
		"/api/v1/users/{userId}",
		DeleteUser,
	},

	Route{
		"GetProfile",
		strings.ToUpper("Get"),
		"/api/v1/users/profile",
		GetProfile,
	},

	Route{
		"GetUser",
		strings.ToUpper("Get"),
		"/api/v1/users/{userId}",
		GetUser,
	},

	Route{
		"ListUsers",
		strings.ToUpper("Get"),
		"/api/v1/users",
		ListUsers,
	},

	Route{
		"UpdateNotificationPreferences",
		strings.ToUpper("Put"),
		"/api/v1/users/profile/notifications",
		UpdateNotificationPreferences,
	},

	Route{
		"UpdateProfile",
		strings.ToUpper("Put"),
		"/api/v1/users/profile",
		UpdateProfile,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/api/v1/users/{userId}",
		UpdateUser,
	},

	Route{
		"VerifyContact",
		strings.ToUpper("Post"),
		"/api/v1/users/profile/verify-contact",
		VerifyContact,
	},
}
