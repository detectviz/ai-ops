# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ErrorResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, error: str=None, message: str=None, details: object=None, request_id: str=None):  # noqa: E501
        """ErrorResponse - a model defined in Swagger

        :param error: The error of this ErrorResponse.  # noqa: E501
        :type error: str
        :param message: The message of this ErrorResponse.  # noqa: E501
        :type message: str
        :param details: The details of this ErrorResponse.  # noqa: E501
        :type details: object
        :param request_id: The request_id of this ErrorResponse.  # noqa: E501
        :type request_id: str
        """
        self.swagger_types = {
            'error': str,
            'message': str,
            'details': object,
            'request_id': str
        }

        self.attribute_map = {
            'error': 'error',
            'message': 'message',
            'details': 'details',
            'request_id': 'request_id'
        }
        self._error = error
        self._message = message
        self._details = details
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt) -> 'ErrorResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErrorResponse of this ErrorResponse.  # noqa: E501
        :rtype: ErrorResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self) -> str:
        """Gets the error of this ErrorResponse.

        錯誤代碼  # noqa: E501

        :return: The error of this ErrorResponse.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error: str):
        """Sets the error of this ErrorResponse.

        錯誤代碼  # noqa: E501

        :param error: The error of this ErrorResponse.
        :type error: str
        """
        if error is None:
            raise ValueError("Invalid value for `error`, must not be `None`")  # noqa: E501

        self._error = error

    @property
    def message(self) -> str:
        """Gets the message of this ErrorResponse.

        錯誤訊息  # noqa: E501

        :return: The message of this ErrorResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this ErrorResponse.

        錯誤訊息  # noqa: E501

        :param message: The message of this ErrorResponse.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def details(self) -> object:
        """Gets the details of this ErrorResponse.

        錯誤詳情  # noqa: E501

        :return: The details of this ErrorResponse.
        :rtype: object
        """
        return self._details

    @details.setter
    def details(self, details: object):
        """Sets the details of this ErrorResponse.

        錯誤詳情  # noqa: E501

        :param details: The details of this ErrorResponse.
        :type details: object
        """

        self._details = details

    @property
    def request_id(self) -> str:
        """Gets the request_id of this ErrorResponse.

        請求追蹤 ID  # noqa: E501

        :return: The request_id of this ErrorResponse.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id: str):
        """Sets the request_id of this ErrorResponse.

        請求追蹤 ID  # noqa: E501

        :param request_id: The request_id of this ErrorResponse.
        :type request_id: str
        """

        self._request_id = request_id
