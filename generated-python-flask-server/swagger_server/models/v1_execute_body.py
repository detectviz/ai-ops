# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class V1ExecuteBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, query: str=None, context: object=None, options: object=None):  # noqa: E501
        """V1ExecuteBody - a model defined in Swagger

        :param query: The query of this V1ExecuteBody.  # noqa: E501
        :type query: str
        :param context: The context of this V1ExecuteBody.  # noqa: E501
        :type context: object
        :param options: The options of this V1ExecuteBody.  # noqa: E501
        :type options: object
        """
        self.swagger_types = {
            'query': str,
            'context': object,
            'options': object
        }

        self.attribute_map = {
            'query': 'query',
            'context': 'context',
            'options': 'options'
        }
        self._query = query
        self._context = context
        self._options = options

    @classmethod
    def from_dict(cls, dikt) -> 'V1ExecuteBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The v1_execute_body of this V1ExecuteBody.  # noqa: E501
        :rtype: V1ExecuteBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query(self) -> str:
        """Gets the query of this V1ExecuteBody.


        :return: The query of this V1ExecuteBody.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query: str):
        """Sets the query of this V1ExecuteBody.


        :param query: The query of this V1ExecuteBody.
        :type query: str
        """

        self._query = query

    @property
    def context(self) -> object:
        """Gets the context of this V1ExecuteBody.


        :return: The context of this V1ExecuteBody.
        :rtype: object
        """
        return self._context

    @context.setter
    def context(self, context: object):
        """Sets the context of this V1ExecuteBody.


        :param context: The context of this V1ExecuteBody.
        :type context: object
        """

        self._context = context

    @property
    def options(self) -> object:
        """Gets the options of this V1ExecuteBody.


        :return: The options of this V1ExecuteBody.
        :rtype: object
        """
        return self._options

    @options.setter
    def options(self, options: object):
        """Sets the options of this V1ExecuteBody.


        :param options: The options of this V1ExecuteBody.
        :type options: object
        """

        self._options = options
