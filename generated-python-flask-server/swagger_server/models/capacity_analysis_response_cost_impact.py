# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CapacityAnalysisResponseCostImpact(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, monthly_increase: float=None, currency: str='USD'):  # noqa: E501
        """CapacityAnalysisResponseCostImpact - a model defined in Swagger

        :param monthly_increase: The monthly_increase of this CapacityAnalysisResponseCostImpact.  # noqa: E501
        :type monthly_increase: float
        :param currency: The currency of this CapacityAnalysisResponseCostImpact.  # noqa: E501
        :type currency: str
        """
        self.swagger_types = {
            'monthly_increase': float,
            'currency': str
        }

        self.attribute_map = {
            'monthly_increase': 'monthly_increase',
            'currency': 'currency'
        }
        self._monthly_increase = monthly_increase
        self._currency = currency

    @classmethod
    def from_dict(cls, dikt) -> 'CapacityAnalysisResponseCostImpact':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CapacityAnalysisResponse_cost_impact of this CapacityAnalysisResponseCostImpact.  # noqa: E501
        :rtype: CapacityAnalysisResponseCostImpact
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monthly_increase(self) -> float:
        """Gets the monthly_increase of this CapacityAnalysisResponseCostImpact.


        :return: The monthly_increase of this CapacityAnalysisResponseCostImpact.
        :rtype: float
        """
        return self._monthly_increase

    @monthly_increase.setter
    def monthly_increase(self, monthly_increase: float):
        """Sets the monthly_increase of this CapacityAnalysisResponseCostImpact.


        :param monthly_increase: The monthly_increase of this CapacityAnalysisResponseCostImpact.
        :type monthly_increase: float
        """

        self._monthly_increase = monthly_increase

    @property
    def currency(self) -> str:
        """Gets the currency of this CapacityAnalysisResponseCostImpact.


        :return: The currency of this CapacityAnalysisResponseCostImpact.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this CapacityAnalysisResponseCostImpact.


        :param currency: The currency of this CapacityAnalysisResponseCostImpact.
        :type currency: str
        """

        self._currency = currency
